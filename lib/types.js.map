{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MIXA/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nL                         = @\n\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'mixa_settings', tests:\n  \"x? is a _mixa_settings\":                 ( x ) -> @isa_optional._mixa_settings x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare '_mixa_settings', tests:\n  \"x.?meta is a mixa_flagdefs\":             ( x ) -> ( not x.meta     )? or @isa.mixa_flagdefs x.meta\n  \"x.?commands is a mixa_cmddefs\":          ( x ) -> ( not x.commands )? or @isa.mixa_cmddefs x.commands\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'mixa_flagdefs', tests:\n  \"x is an object\":                         ( x ) -> @isa.object x\n  \"each attribute of x is a mixa_flagdef\":  ( x ) ->\n    for k, v of x\n      return false unless @isa.mixa_flagdef v\n    return true\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'mixa_cmddefs', tests:\n  \"x is an object\":                         ( x ) -> @isa.object x\n  \"each attribute of x is a mixa_cmddef\":   ( x ) ->\n    for k, v of x\n      return false unless @isa.mixa_cmddef v\n    return true\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'mixa_flagdef', tests:\n  \"x is an object\":                         ( x ) -> @isa.object x\n  #.........................................................................................................\n  # These options are filled out by `mixa` or used by `command-line-args` in incompatible ways:\n  \"x.name is not set\":                      ( x ) -> not x.name?\n  \"x.group is not set\":                     ( x ) -> not x.group?\n  \"x.defaultOption is not set\":             ( x ) -> not x.defaultOption?\n  #.........................................................................................................\n  \"x.?type is a function\":                  ( x ) -> @isa_optional.function x.type\n  \"x.?alias is a text\":                     ( x ) -> @isa_optional.text     x.alias\n  \"x.?description is a text\":               ( x ) -> @isa_optional.text     x.description\n  \"x.?multiple is a boolean\":               ( x ) -> @isa_optional.boolean  x.multiple\n  \"x.?lazyMultiple is a boolean\":           ( x ) -> @isa_optional.boolean  x.lazyMultiple\n  \"x.?defaultValue is anything\":            ( x ) -> true\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'mixa_cmddef', tests:\n  \"x is an object\":                         ( x ) -> @isa.object x\n  \"x.name is not set\":                      ( x ) -> not x.name?\n  \"x.?description is a text\":               ( x ) -> @isa_optional.text     x.description\n  \"x.?external is a boolean\":               ( x ) -> @isa_optional.boolean  x.external\n\n\n"
  ]
}